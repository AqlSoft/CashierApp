@extends('layouts.admin')

@section('extra-links')
<link rel="stylesheet" href="{{ asset('assets/admin/css/orderitem.css') }}">

@endsection
@section('contents')
<h1 class="mt-3 pb-2 " style="border-bottom: 1px solid #dedede"> Add Order Items
</h1>
<div class="container ">
  <div class="row mt-3  d-flex gap-3">
    <div class="col col-4 ">
      <div class="row">
        <div class="col col-12">
          <!-- قائمة الفئات -->
          <select class="form-select form-control mt-2" id="category-select">
            <option selected value="">All category</option>
            @foreach ($categories as $category)
            <option value="{{ $category->id }}">{{ $category->cat_name }}</option>
            @endforeach
          </select>
        </div>
      </div>
      <div class="row mt-2">
        <div class="col col-12">
          <table class="table" id="selected-products">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Meal</th>
                <th scope="col">Gty</th>
                <th scope="col">U.Price</th>
                <th scope="col">T.Price</th>
                <th scope="col">Action</th>
              </tr>
            </thead>
            <tbody>
              <!-- سيتم إضافة الصفوف هنا عبر JavaScript -->
            </tbody>
          </table>

          <!-- عرض الإجمالي الكلي -->
          <div class="total-price mt-3">
            <h4>Total Price: <span id="total-price">0</span></h4>
          </div>
        </div>
      </div>
    </div>

    <div class="col col-7 pb-3 pt-3">
      <!-- عرض المنتجات -->
      <div class="row d-flex gap-3" id="product-list">
        @if (isset($products) && count($products))
        @foreach ($products as $product)
        <div class="col col-2 product-item" data-id="{{ $product->id }}" data-name="{{ $product->name }}" data-price="{{ $product->sale_price }}" data-category="{{ $product->category_id }}">
          <div class="productlist">
            <div class="productlistimg">
              <img src="{{ asset('assets/admin/uploads/images/products/' . $product->image) }}">
            </div>
            <div class="productlistcontent">
              <h5 class="mb-1 mt-1">{{ $product->name }}</h5>
              <p class="mb-3 quantity-display">gty: 0</p>
            </div>
            <!-- السعر هنا -->
            <div class="price-overlay">
              <h5 class="price-display">{{ $product->sale_price }}</h5>
            </div>
          </div>
        </div>
        @endforeach
        @endif
      </div>

      <!-- -->






    </div>
  </div>

  <script>
    // إضافة رسالة إذا لم يتم العثور على منتجات
    $('#category-select').change(function() {
      const selectedCategoryId = $(this).val();
      let foundProducts = false;

      $('.product-item').each(function() {
        const productCategoryId = $(this).data('category');

        if (selectedCategoryId === "" || productCategoryId == selectedCategoryId) {
          $(this).show();
          foundProducts = true;
        } else {
          $(this).hide();
        }
      });

      // إظهار رسالة إذا لم يتم العثور على منتجات
      if (!foundProducts && selectedCategoryId !== "") {
        alert('No products found in this category.');
      }
    });
    // إضافة منتجات محددة
    $(document).ready(function() {
      // مصفوفة لتخزين المنتجات المحددة
      let selectedProducts = [];

      // حدث النقر على عنصر منتج
      $('.product-item').click(function() {
        const productId = $(this).data('id');
        const productName = $(this).data('name');
        const productPrice = $(this).data('price');

        // التحقق مما إذا كان المنتج موجودًا بالفعل في المصفوفة
        const existingProduct = selectedProducts.find(item => item.id === productId);

        if (existingProduct) {
          // إذا كان المنتج موجودًا، قم بزيادة الكمية
          existingProduct.quantity += 1;
        } else {
          // إذا لم يكن المنتج موجودًا، قم بإضافته
          selectedProducts.push({
            id: productId,
            name: productName,
            price: productPrice,
            quantity: 1
          });
        }

        // تحديث الجدول وعرض الكمية والإجمالي الكلي
        updateTable();
        updateQuantityDisplay(productId, existingProduct ? existingProduct.quantity : 1);
        updateTotalPrice();

        // تمييز العنصر المحدد
        $(this).toggleClass('selected');
      });

      // تحديث الجدول
      function updateTable() {
        const tbody = $('#selected-products tbody');
        tbody.empty(); // مسح المحتوى الحالي

        selectedProducts.forEach((product, index) => {
          const totalPrice = product.price * product.quantity;

          const row = `
                    <tr data-id="${product.id}">
                        <th scope="row">${index + 1}</th>
                        <td>${product.name}</td>
                        <td>${product.quantity}</td>
                        <td>${product.price}</td>
                        <td>${totalPrice}</td>
                        <td>
                          <button class="btn btn-sm py-0 remove-item" > <i class="fa fa-trash text-danger"></i></button>
                            
                        </td>
                    </tr>
                `;
          tbody.append(row);
        });
      }

      // تحديث عرض الكمية في كل منتج
      function updateQuantityDisplay(productId, quantity) {
        $(`.product-item[data-id="${productId}"] .quantity-display`).text(`gty: ${quantity}`);
      }

      // تحديث الإجمالي الكلي
      function updateTotalPrice() {
        let totalPrice = 0;
        selectedProducts.forEach(product => {
          totalPrice += product.price * product.quantity;
        });
        $('#total-price').text(totalPrice);
      }

      // حدث النقر على زر الحذف
      $(document).on('click', '.remove-item', function() {
        const productId = $(this).closest('tr').data('id');

        // إزالة المنتج من المصفوفة
        selectedProducts = selectedProducts.filter(item => item.id !== productId);

        // تحديث الجدول وعرض الكمية والإجمالي الكلي
        updateTable();
        updateQuantityDisplay(productId, 0); // إعادة تعيين الكمية إلى 0
        updateTotalPrice();

        // // إزالة التمييز من العنصر
        // $(`.product-item[data-id="${productId}"]`).removeClass('selected');
      });
    });
  </script>

  @endsection